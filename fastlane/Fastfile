# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.18.3"

default_platform :ios

platform :ios do
  before_all do |lane|
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    # update_fastlane

    # ensure_git_status_clean
    setup_jenkins

    if lane == :snap
      next
    end

    # Increment build number before building
    increment_build_number(
      xcodeproj: "fastjenkins/fastjenkins.xcodeproj",
      build_number: ENV['CIRCLE_BUILD_NUM']
    )

  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "fastjenkins") # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  lane :testing do
    fabric(scheme: "Testing")
  end

  lane :staging do |options|
    options[:scheme] = "Staging"
    fabric(options)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "fastjenkins") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  ######################### PRIVATE LANES #########################
  #------------------------- Crashlytics -------------------------#

  private_lane :fabric do |options|
    scheme = options[:scheme]

    build(
      scheme: scheme,
      signId: ENV['SIGNING_IDENTITY_DEV']
    )
  end

  private_lane :build do |options|
    scheme = options[:scheme]
    signingId = options[:signId]

    gym(
      scheme: "fastjenkins #{scheme}",
      configuration: scheme,
      clean: true,
      # sdk: "iphonesimulator10.2",
      include_bitcode: false,
      workspace: "fastjenkins-ios.xcworkspace",
      output_directory: "fastlane/build",
      output_name: "fastjenkins.ipa",
      codesigning_identity: "#{signingId}",
    )
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
